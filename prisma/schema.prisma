// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL")
}

model CustomerModel {
  id        Int          @id @default(autoincrement())
  name      String
  email     String?
  phone     String
  address   String
  createdAt DateTime     @default(now())
  orders    OrderModel[]
  Vehicle   Vehicle[]
}

model OrderModel {
  id          Int           @id @default(autoincrement())
  description String
  totalAmount Float
  createdAt   DateTime      @default(now())
  customerId  Int
  customer    CustomerModel @relation(fields: [customerId], references: [id])
  TimeSlot    TimeSlot      @relation(fields: [timeSlotId], references: [id])
  timeSlotId  Int
  washTypeId  Int
  washType    WashType      @relation(fields: [washTypeId], references: [id])
  Vehicle     Vehicle       @relation(fields: [vehicleId], references: [id])
  vehicleId   Int
}

model TimeSlot {
  id          Int          @id @default(autoincrement())
  startTime   DateTime
  endTime     DateTime
  isAvailable Boolean      @default(true)
  orders      OrderModel[]
}

model WashType {
  id          Int          @id @default(autoincrement())
  name        String
  description String?
  price       Float
  orders      OrderModel[]
}

model Vehicle {
  id          Int           @id @default(autoincrement())
  customerId  Int
  customer    CustomerModel @relation(fields: [customerId], references: [id])
  make        String
  model       String
  plateNumber String
  description String?
  orders      OrderModel[]
}
